{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MdpComponent = class MdpComponent {\n  constructor(service, router, authService) {\n    this.service = service;\n    this.router = router;\n    this.authService = authService;\n    this.email = \"\";\n    this.numTel = \"\";\n    this.id = 0;\n  }\n  login() {\n    if (this.email == \"\" || this.numTel == \"\") {\n      alert(\"your email or numTel is invalid\");\n    } else {\n      this.service.recupererMDP(this.email, this.numTel).subscribe(mdp => {\n        this.id = mdp; // Assurez-vous que \"this.id\" est du bon type, potentiellement aussi un Observable<number>\n      });\n\n      console.log(this.id);\n      this.router.navigate(['update', this.id]);\n      this.authService.setLoggedIn(true); // Notification de connexion réussie\n    }\n  }\n\n  ngOnInit() {}\n};\nMdpComponent = __decorate([Component({\n  selector: 'app-mdp',\n  templateUrl: './mdp.component.html',\n  styleUrls: ['./mdp.component.css']\n})], MdpComponent);\nexport { MdpComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EACvBC,YAAqBC,OAAoB,EAAUC,MAAa,EAAUC,WAAwB;IAA7E,YAAO,GAAPF,OAAO;IAAuB,WAAM,GAANC,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAGrF,UAAK,GAAQ,EAAE;IACf,WAAM,GAAQ,EAAE;IAChB,OAAE,GAAQ,CAAC;EAL2F;EAMtGC,KAAK;IAEH,IAAG,IAAI,CAACC,KAAK,IAAE,EAAE,IAAE,IAAI,CAACC,MAAM,IAAE,EAAE,EAAC;MACjCC,KAAK,CAAC,iCAAiC,CAAC;KACzC,MACG;MAEF,IAAI,CAACN,OAAO,CAACO,YAAY,CAAC,IAAI,CAACH,KAAK,EAAC,IAAI,CAACC,MAAM,CAAC,CAACG,SAAS,CAAEC,GAAW,IAAI;QAC1E,IAAI,CAACC,EAAE,GAAGD,GAAG,CAAC,CAAC;MACnB,CAAC,CAAC;;MACAE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,EAAE,CAAC;MACpB,IAAI,CAACT,MAAM,CAACY,QAAQ,CAAC,CAAC,QAAQ,EAAC,IAAI,CAACH,EAAE,CAAC,CAAC;MACxC,IAAI,CAACR,WAAW,CAACY,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;;EAEDC,QAAQ,IAGN;CACF;AA3BYjB,YAAY,eALxBD,SAAS,CAAC;EACTmB,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWpB,YAAY,CA2BxB;SA3BYA,YAAY","names":["Component","MdpComponent","constructor","service","router","authService","login","email","numTel","alert","recupererMDP","subscribe","mdp","id","console","log","navigate","setLoggedIn","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\mdp\\mdp.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { User } from '../model/User';\nimport { UserService } from 'src/app/services/User.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n@Component({\n  selector: 'app-mdp',\n  templateUrl: './mdp.component.html',\n  styleUrls: ['./mdp.component.css']\n})\nexport class MdpComponent {\n  constructor( private service: UserService, private router:Router, private authService: AuthService) { }\n  listUser!: User[];\n\n  email:string=\"\";\n  numTel:string=\"\";\n  id:number=0\n  login(){\n\n    if(this.email==\"\"||this.numTel==\"\"){\n      alert(\"your email or numTel is invalid\");\n    }\n    else{\n    \n      this.service.recupererMDP(this.email,this.numTel).subscribe((mdp: number) => {\n        this.id = mdp; // Assurez-vous que \"this.id\" est du bon type, potentiellement aussi un Observable<number>\n    });\n      console.log(this.id);\n      this.router.navigate(['update',this.id]);\n      this.authService.setLoggedIn(true); // Notification de connexion réussie\n    }\n  }\n  \n ngOnInit(){\n\n    \n   }   \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}