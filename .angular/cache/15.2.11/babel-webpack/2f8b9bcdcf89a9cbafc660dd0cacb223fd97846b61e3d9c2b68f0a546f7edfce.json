{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': 'http://localhost:4200'\n  })\n};\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.ajouterurl = 'http://localhost:9000/pi/utilisateur/ajout';\n    this.updateUrl = '';\n    this.verifyEmailUrl = 'http://localhost:9000/pi/utilisateur/verify-email';\n  }\n  /*ajouterUser(User: User): Observable<User> {\r\n   return this.http.post<User>(this.ajouterurl, User, httpOptions);\r\n  }*/\n  getAll() {\n    return this.http.get('http://localhost:9000/pi/utilisateur/getAll');\n  }\n  getUserById(id) {\n    return this.http.get('http://localhost:9000/pi/utilisateur/getUtilisateurId/' + id);\n  }\n  recupererMDP(email, numTel) {\n    return this.http.get('http://localhost:9000/pi/utilisateur/mdp/' + email + '/' + numTel);\n  }\n  /* updateUser(user:User){\r\n     return this.http.put('http://localhost:9000/pi/utilisateur/updateUtilisateur',user)\r\n   }*/\n  verifyEmail(email) {\n    return this.http.post(this.verifyEmailUrl, {\n      email\n    }, httpOptions);\n  }\n  ajouterUser(user, image) {\n    const formData = new FormData();\n    formData.append('nomUtilisateur', user.nomUtilisateur || '');\n    formData.append('prenomUtilisateur', user.prenomUtilisateur || '');\n    formData.append('email', user.email || '');\n    formData.append('numTel', user.numTel || '');\n    formData.append('motDePasse', user.motDePasse || '');\n    formData.append('role', user.role?.toString() || '');\n    formData.append('interet', user.interet?.toString() || '');\n    if (image) {\n      formData.append('image', image, image.name);\n      console.log(formData.get('image'));\n    }\n    const options = {\n      headers: new HttpHeaders()\n    };\n    return this.http.post(`${this.ajouterurl}`, formData, options);\n  }\n  updateUser(user, image) {\n    const formData = new FormData();\n    formData.append('nomUtilisateur', user.nomUtilisateur || '');\n    formData.append('prenomUtilisateur', user.prenomUtilisateur || '');\n    formData.append('email', user.email || '');\n    formData.append('numTel', user.numTel || '');\n    formData.append('motDePasse', user.motDePasse || '');\n    formData.append('role', user.role?.toString() || '');\n    formData.append('interet', user.interet?.toString() || '');\n    if (image) {\n      formData.append('image', image, image.name);\n    }\n    const options = {\n      headers: new HttpHeaders()\n    };\n    return this.http.put(`${this.updateUrl}/${user.id}`, formData, options);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["HttpHeaders","httpOptions","headers","UserService","constructor","http","getAll","get","getUserById","id","recupererMDP","email","numTel","verifyEmail","post","verifyEmailUrl","ajouterUser","user","image","formData","FormData","append","nomUtilisateur","prenomUtilisateur","motDePasse","role","toString","interet","name","console","log","options","ajouterurl","updateUser","put","updateUrl","factory","providedIn"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\services\\User.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient,HttpHeaders, HttpErrorResponse} from \"@angular/common/http\";\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from 'src/app/model/User';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' ,'Access-Control-Allow-Origin': 'http://localhost:4200'})\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private ajouterurl ='http://localhost:9000/pi/utilisateur/ajout';\r\n  private updateUrl=''\r\n  constructor(private http: HttpClient) { }\r\n\r\n  private verifyEmailUrl = 'http://localhost:9000/pi/utilisateur/verify-email'\r\n   /*ajouterUser(User: User): Observable<User> {\r\n    return this.http.post<User>(this.ajouterurl, User, httpOptions);\r\n  }*/\r\n  getAll(){\r\n    return this.http.get<User[]>('http://localhost:9000/pi/utilisateur/getAll')\r\n  }\r\n  getUserById(id:number){\r\n    return this.http.get<User>('http://localhost:9000/pi/utilisateur/getUtilisateurId/'+id)\r\n  }\r\n  recupererMDP(email:String,numTel:String){\r\n    return this.http.get<number>('http://localhost:9000/pi/utilisateur/mdp/'+email+'/'+numTel)\r\n  }\r\n /* updateUser(user:User){\r\n    return this.http.put('http://localhost:9000/pi/utilisateur/updateUtilisateur',user)\r\n  }*/\r\n  verifyEmail(email: string): Observable<any> {\r\n    return this.http.post<any>(this.verifyEmailUrl, { email }, httpOptions);\r\n  }\r\n  ajouterUser(user: User, image: File | null): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('nomUtilisateur',user.nomUtilisateur || '');\r\n    formData.append('prenomUtilisateur', user.prenomUtilisateur|| '');\r\n    formData.append('email', user.email|| '');\r\n    formData.append('numTel', user.numTel|| '');\r\n    formData.append('motDePasse', user.motDePasse|| '');\r\n    formData.append('role', user.role?.toString()|| '');\r\n    formData.append('interet', user.interet?.toString()|| '');\r\n    if (image) {\r\n      formData.append('image', image, image.name);\r\n      console.log(formData.get('image'))\r\n  }\r\n    const options = {\r\n        headers: new HttpHeaders()\r\n    \r\n    };\r\n\r\n    return this.http.post<any>(`${this.ajouterurl}`, formData, options);\r\n  }\r\n  updateUser(user: User, image: File | null): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('nomUtilisateur', user.nomUtilisateur || '');\r\n    formData.append('prenomUtilisateur', user.prenomUtilisateur || '');\r\n    formData.append('email', user.email || '');\r\n    formData.append('numTel', user.numTel || '');\r\n    formData.append('motDePasse', user.motDePasse || '');\r\n    formData.append('role', user.role?.toString() || '');\r\n    formData.append('interet', user.interet?.toString() || '');\r\n    if (image) {\r\n      formData.append('image', image, image.name);\r\n    }\r\n  \r\n    const options = {\r\n      headers: new HttpHeaders()\r\n    };\r\n  \r\n    return this.http.put<any>(`${this.updateUrl}/${user.id}`, formData, options);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}