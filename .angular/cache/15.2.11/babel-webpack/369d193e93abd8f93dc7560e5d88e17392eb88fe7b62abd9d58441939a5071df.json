{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, service) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.RegisterForm = new FormGroup({\n      nomUtilisateur: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      prenomUtilisateur: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      motDePasse: new FormControl('', [Validators.required, Validators.minLength(8), Validators.pattern('[0-9]{8}')]),\n      numTel: new FormControl('', [Validators.required, Validators.pattern('[0-9]{8}')])\n    });\n  }\n  ngOnInit() {}\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAoB,gBAAgB;AAUxE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAE5BC,YAAoBC,WAAwB,EAASC,OAAmB;IAApD,gBAAW,GAAXD,WAAW;IAAsB,YAAO,GAAPC,OAAO;IAG5D,iBAAY,GAAE,IAAIL,SAAS,CAAC;MAC1BM,cAAc,EAAG,IAAIP,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAClFC,iBAAiB,EAAG,IAAIV,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACvFE,KAAK,EAAG,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACS,KAAK,CAAC,CAAC;MAClEC,UAAU,EAAG,IAAIZ,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,EAC1EP,UAAU,CAACW,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MAChCC,MAAM,EAAG,IAAId,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACW,OAAO,CAAC,UAAU,CAAC,CAAC;KACjF,CAAC;EARF;EAUAE,QAAQ,IAER;CA+HD;AA/IYZ,iBAAiB,eAL7BJ,SAAS,CAAC;EACTiB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWf,iBAAiB,CA+I7B;SA/IYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","formBuilder","service","nomUtilisateur","required","minLength","prenomUtilisateur","email","motDePasse","pattern","numTel","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators ,FormBuilder} from '@angular/forms';\nimport { UserService } from 'src/app/services/User.service';\nimport { User } from 'src/app/model/User';\nimport {Router} from '@angular/router'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n \n  constructor(private formBuilder: FormBuilder,private service:UserService) { \n\n  }\n  RegisterForm =new FormGroup({\n    nomUtilisateur : new FormControl('',[Validators.required,Validators.minLength(3)]),\n    prenomUtilisateur : new FormControl('',[Validators.required,Validators.minLength(3)]),\n  email : new FormControl('',[Validators.required,Validators.email]),\n  motDePasse : new FormControl('',[Validators.required,Validators.minLength(8),\n    Validators.pattern('[0-9]{8}')]),\n    numTel : new FormControl('',[Validators.required,Validators.pattern('[0-9]{8}')]),\n  });\n\n  ngOnInit(): void {\n\n  }\n\n  /*onSubmit() {\n    if (this.RegisterForm.valid) {\n      \n    }\n    \n  }*/\n /*\n  User: User[] = []; \n\n  showNameField: boolean = false;\n  showDateField: boolean = false;\n  showDescriptionField: boolean = false;\n\n  onInterestChange(event: Event) {\n    const target = event.target as HTMLSelectElement;\n    const interet = target.value;\n\n    if (interet) {\n     \n      this.showNameField = false;\n      this.showDateField = false;\n      this.showDescriptionField = false;\n\n      switch (interet) {\n        case 'sport':\n          this.showNameField = true;\n          this.showDateField = true;\n          this.showDescriptionField = true;\n\n          break;\n        case 'music':\n          this.showNameField = true;\n          this.showDateField = true;\n          this.showDescriptionField = true;\n          break;\n        case 'tech':\n          this.showNameField = true;\n          this.showDateField = true;\n          this.showDescriptionField = true;\n          break;\n          case 'photographie':\n            this.showNameField = true;\n            this.showDateField = true;\n            this.showDescriptionField = true;\n            break;\n            case 'design':\n              this.showNameField = true;\n              this.showDateField = true;\n              this.showDescriptionField = true;\n              break;\n              case 'dessin':\n                this.showNameField = true;\n                this.showDateField = true;\n                this.showDescriptionField = true;\n                break;\n                case 'robots':\n                  this.showNameField = true;\n                  this.showDateField = true;\n                  this.showDescriptionField = true;\n                  break;\n        // Add other cases as needed\n        default:\n          break;\n      }\n    }\n  }\n  onRoleChange(event: Event) {\n    const target = event.target as HTMLSelectElement;\n    const role = target.value;\n    if (role) {\n     \n      this.showNameField = false;\n      this.showDateField = false;\n      this.showDescriptionField = false;\n\n      switch (role) {\n        case 'super_admin':\n          this.showNameField = true;\n          this.showDateField = true;\n          this.showDescriptionField = true;\n\n          break;\n        case 'admin_club':\n          this.showNameField = true;\n          this.showDateField = true;\n          this.showDescriptionField = true;\n          break;\n        case 'user':\n          this.showNameField = true;\n          this.showDateField = true;\n          this.showDescriptionField = true;\n          break;\n        // Add other cases as needed\n        default:\n          break;\n      }\n    }\n  }\n  persistUser() {\n    //const userAmal = this.users.find(user => user.firstName === 'amal');\n      if(this.RegisterForm.valid){\n        const formData=this.RegisterForm.value;\n    const UserData: User = {\n      nomUtilisateur:formData.nomUtilisateur,\n      prenom:formData.prenomUtilisateur ,\n        mail:formData.email ,\n        telephone:formData.numTel ,\n        password:formData.motDePasse ,\n        \n\n    };\n\n    this.service.ajouterUser(UserData).subscribe((response) => {\n      console.log('Utilisateur ajoutée avec succès :', response);\n      this.ngOnInit();\n   \n    }, (error) => {\n      console.error('Erreur lors de l\\'ajout  utilisateur :', error);\n    });\n  }}\n\n  \n  ngOnInit(){\n   \n  }*/\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}