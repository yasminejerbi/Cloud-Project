{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.RegisterForm = new FormGroup({\n      nom: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      prenom: new FormControl('', [Validators.required, Validators.minLength(7)])\n    });\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      nom: ['', [Validators.required, Validators.minLength(3)]],\n      prenom: ['', [Validators.required, Validators.minLength(3)]]\n      // Ajouter les autres champs ici\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      // Envoyer les données du formulaire\n      console.log(this.registerForm.value);\n    } else {\n      // Marquer les champs comme touchés pour afficher les erreurs\n      this.markFormGroupTouched(this.registerForm);\n    }\n  }\n  // Fonction pour marquer tous les champs comme touchés\n  markFormGroupTouched(formGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else {\n        control.markAsTouched();\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN/B,iBAAY,GAAG,IAAIJ,SAAS,CAAC;MAC3BK,GAAG,EAAG,IAAIN,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACvEC,MAAM,EAAG,IAAIT,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACK,QAAQ,EAACL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC;KAE1E,CAAC;EAE8C;EAEhDE,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACzCN,GAAG,EAAE,CAAC,EAAE,EAAE,CAACJ,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzDC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACK,QAAQ,EAAEL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC;MAC3D;KACD,CAAC;EACJ;;EAEAK,QAAQ;IACN,IAAI,IAAI,CAACF,YAAY,CAACG,KAAK,EAAE;MAC3B;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,YAAY,CAACM,KAAK,CAAC;KACrC,MAAM;MACL;MACA,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACP,YAAY,CAAC;;EAEhD;EAEA;EACAO,oBAAoB,CAACC,SAAoB;IACvCC,MAAM,CAACC,MAAM,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACC,OAAO,CAACC,OAAO,IAAG;MAClD,IAAIA,OAAO,YAAYvB,SAAS,EAAE;QAChC,IAAI,CAACiB,oBAAoB,CAACM,OAAO,CAAC;OACnC,MAAM;QACLA,OAAO,CAACC,aAAa,EAAE;;IAE3B,CAAC,CAAC;EACJ;CACD;AArCYtB,iBAAiB,eAL7BJ,SAAS,CAAC;EACT2B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWzB,iBAAiB,CAqC7B;SArCYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","formBuilder","nom","required","minLength","prenom","ngOnInit","registerForm","group","onSubmit","valid","console","log","value","markFormGroupTouched","formGroup","Object","values","controls","forEach","control","markAsTouched","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  RegisterForm = new FormGroup({\n    nom : new FormControl('',[Validators.required,Validators.minLength(6)]),\n    prenom : new FormControl('',[Validators.required,Validators.minLength(7)]),\n\n  })\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      nom: ['', [Validators.required, Validators.minLength(3)]],\n      prenom: ['', [Validators.required, Validators.minLength(3)]],\n      // Ajouter les autres champs ici\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      // Envoyer les données du formulaire\n      console.log(this.registerForm.value);\n    } else {\n      // Marquer les champs comme touchés pour afficher les erreurs\n      this.markFormGroupTouched(this.registerForm);\n    }\n  }\n\n  // Fonction pour marquer tous les champs comme touchés\n  markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else {\n        control.markAsTouched();\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}