{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { WebSocketSubject } from 'rxjs/webSocket';\nlet IAComponent = class IAComponent {\n  constructor() {\n    this.cameraUrl = '';\n    this.reply = '';\n    this._channel = new WebSocketSubject('ws://192.168.1.190:8000/');\n  }\n  sendUrlToPython() {\n    if (this.cameraUrl !== '') {\n      const dataToSend = {\n        url: this.cameraUrl\n      };\n      this._channel.next(JSON.stringify(dataToSend));\n    }\n    this._channel.subscribe(data => {\n      const parsedData = JSON.parse(data);\n      if (parsedData.status === \"connected\") {\n        this.reply = \"Connected!\";\n      } else if (parsedData.status === \"disconnected\") {\n        this.reply = \"Disconnected!\";\n      } else if (parsedData.count !== undefined) {\n        this.reply = `Count: ${parsedData.count}`;\n      }\n    }, error => {\n      console.error('WebSocket error:', error);\n    });\n  }\n};\nIAComponent = __decorate([Component({\n  selector: 'app-ia',\n  templateUrl: './ia.component.html',\n  styleUrls: ['./ia.component.css']\n})], IAComponent);\nexport { IAComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAmB,eAAe;AACpD,SAASC,gBAAgB,QAAQ,gBAAgB;AAM1C,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAAjBC;IACL,cAAS,GAAW,EAAE;IACtB,UAAK,GAAW,EAAE;IACV,aAAQ,GAA0B,IAAIF,gBAAgB,CAAM,0BAA0B,CAAC;EA4BjG;EAxBEG,eAAe;IAEb,IAAI,IAAI,CAACC,SAAS,KAAK,EAAE,EAAE;MACzB,MAAMC,UAAU,GAAG;QAAEC,GAAG,EAAE,IAAI,CAACF;MAAS,CAAE;MAC1C,IAAI,CAACG,QAAQ,CAACC,IAAI,CAACC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,CAAC;;IAG9C,IAAI,CAACE,QAAQ,CAACI,SAAS,CACpBC,IAAI,IAAI;MACP,MAAMC,UAAU,GAAGJ,IAAI,CAACK,KAAK,CAACF,IAAI,CAAC;MACnC,IAAIC,UAAU,CAACE,MAAM,KAAK,WAAW,EAAE;QACrC,IAAI,CAACC,KAAK,GAAG,YAAY;OAC1B,MAAM,IAAIH,UAAU,CAACE,MAAM,KAAK,cAAc,EAAE;QAC/C,IAAI,CAACC,KAAK,GAAG,eAAe;OAC7B,MAAM,IAAIH,UAAU,CAACI,KAAK,KAAKC,SAAS,EAAE;QACzC,IAAI,CAACF,KAAK,GAAG,UAAUH,UAAU,CAACI,KAAK,EAAE;;IAE7C,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC,CACF;EAEL;CACD;AA/BYlB,WAAW,eALvBF,SAAS,CAAC;EACTsB,QAAQ,EAAE,QAAQ;EAClBC,WAAW,EAAE,qBAAqB;EAClCC,SAAS,EAAE,CAAC,oBAAoB;CACjC,CAAC,GACWtB,WAAW,CA+BvB;SA/BYA,WAAW","names":["Component","WebSocketSubject","IAComponent","constructor","sendUrlToPython","cameraUrl","dataToSend","url","_channel","next","JSON","stringify","subscribe","data","parsedData","parse","status","reply","count","undefined","error","console","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\ia\\ia.component.ts"],"sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { WebSocketSubject } from 'rxjs/webSocket';\n@Component({\n  selector: 'app-ia',\n  templateUrl: './ia.component.html',\n  styleUrls: ['./ia.component.css']\n})\nexport class IAComponent  {\n  cameraUrl: string = '';\n  reply: string = '';\n  private _channel: WebSocketSubject<any> = new WebSocketSubject<any>('ws://192.168.1.190:8000/');\n\n\n\n  sendUrlToPython() {\n   \n    if (this.cameraUrl !== '') {\n      const dataToSend = { url: this.cameraUrl };\n      this._channel.next(JSON.stringify(dataToSend));\n    }\n    \n      this._channel.subscribe(\n        (data) => {\n          const parsedData = JSON.parse(data);\n          if (parsedData.status === \"connected\") {\n            this.reply = \"Connected!\";\n          } else if (parsedData.status === \"disconnected\") {\n            this.reply = \"Disconnected!\";\n          } else if (parsedData.count !== undefined) {\n            this.reply = `Count: ${parsedData.count}`;\n          }\n        },\n        (error) => {\n          console.error('WebSocket error:', error);\n        }\n      );\n\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}