{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': 'http://localhost:4200'\n  })\n};\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.ajouterurl = 'http://localhost:9000/pi/utilisateur/ajout';\n  }\n  ajouterUser(User) {\n    return this.http.post(this.ajouterurl, User, httpOptions);\n  }\n  getAll() {\n    return this.http.get('http://localhost:9000/pi/utilisateur/getAll');\n  }\n  getUserById(id) {\n    return this.http.get('http://localhost:9000/pi/utilisateur/getUtilisateurId/' + id);\n  }\n  recupererMDP(email, numTel) {\n    return this.http.get('http://localhost:9000/pi/utilisateur/mdp/' + email + '/' + numTel);\n  }\n  updateUser(user) {\n    return this.http.put('http://localhost:9000/pi/utilisateur/updateUtilisateur', user);\n  }\n  verifyEmail(email) {\n    return this.http.post(this.verifyEmailUrl, {\n      email\n    }, httpOptions);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAAmBA,WAAW,QAA0B,sBAAsB;;;AAK9E,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE,kBAAkB;IAAE,6BAA6B,EAAE;EAAuB,CAAC;CACvH;AAID,OAAM,MAAOG,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,eAAU,GAAE,4CAA4C;EAExB;EAGvCC,WAAW,CAACC,IAAU;IACrB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAO,IAAI,CAACC,UAAU,EAAEF,IAAI,EAAEN,WAAW,CAAC;EACjE;EACAS,MAAM;IACJ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,6CAA6C,CAAC;EAC7E;EACAC,WAAW,CAACC,EAAS;IACnB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAO,wDAAwD,GAACE,EAAE,CAAC;EACzF;EACAC,YAAY,CAACC,KAAY,EAACC,MAAa;IACrC,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAS,2CAA2C,GAACI,KAAK,GAAC,GAAG,GAACC,MAAM,CAAC;EAC5F;EACAC,UAAU,CAACC,IAAS;IAClB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,wDAAwD,EAACD,IAAI,CAAC;EACrF;EACAE,WAAW,CAACL,KAAa;IACvB,OAAO,IAAI,CAACV,IAAI,CAACG,IAAI,CAAM,IAAI,CAACa,cAAc,EAAE;MAAEN;IAAK,CAAE,EAAEd,WAAW,CAAC;EACzE;EAAC;qBAvBUE,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAmB,SAAXnB,WAAW;IAAAoB,YAFV;EAAM","names":["HttpHeaders","httpOptions","headers","UserService","constructor","http","ajouterUser","User","post","ajouterurl","getAll","get","getUserById","id","recupererMDP","email","numTel","updateUser","user","put","verifyEmail","verifyEmailUrl","factory","providedIn"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\services\\User.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient,HttpHeaders, HttpErrorResponse} from \"@angular/common/http\";\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { User } from 'src/app/model/User';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' ,'Access-Control-Allow-Origin': 'http://localhost:4200'})\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private ajouterurl ='http://localhost:9000/pi/utilisateur/ajout';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n   ajouterUser(User: User): Observable<User> {\r\n    return this.http.post<User>(this.ajouterurl, User, httpOptions);\r\n  }\r\n  getAll(){\r\n    return this.http.get<User[]>('http://localhost:9000/pi/utilisateur/getAll')\r\n  }\r\n  getUserById(id:number){\r\n    return this.http.get<User>('http://localhost:9000/pi/utilisateur/getUtilisateurId/'+id)\r\n  }\r\n  recupererMDP(email:String,numTel:String){\r\n    return this.http.get<number>('http://localhost:9000/pi/utilisateur/mdp/'+email+'/'+numTel)\r\n  }\r\n  updateUser(user:User){\r\n    return this.http.put('http://localhost:9000/pi/utilisateur/updateUtilisateur',user)\r\n  }\r\n  verifyEmail(email: string): Observable<any> {\r\n    return this.http.post<any>(this.verifyEmailUrl, { email }, httpOptions);\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}