{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isLoggedInSubject = new Subject();\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n  }\n  setLoggedIn(value) {\n    this.isLoggedInSubject.next(value);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,WAAW;EAHxBC;IAIU,sBAAiB,GAAG,IAAIF,OAAO,EAAW;IAElD,gBAAW,GAAG,IAAI,CAACG,iBAAiB,CAACC,YAAY,EAAE;;EAEnDC,WAAW,CAACC,KAAc;IACxB,IAAI,CAACH,iBAAiB,CAACI,IAAI,CAACD,KAAK,CAAC;EACpC;EAAC;qBAPUL,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAO,SAAXP,WAAW;IAAAQ,YAFV;EAAM","names":["Subject","AuthService","constructor","isLoggedInSubject","asObservable","setLoggedIn","value","next","factory","providedIn"],"sourceRoot":"","sources":["E:\\1ESPRIT\\pi\\front\\pi-angular\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private isLoggedInSubject = new Subject<boolean>();\n\n  isLoggedIn$ = this.isLoggedInSubject.asObservable();\n\n  setLoggedIn(value: boolean) {\n    this.isLoggedInSubject.next(value);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}